FROM node:18-alpine as base
RUN apk add --no-cache g++ make py3-pip libc6-compat
# Install PostgreSQL client tools
# RUN apk add --no-cache postgresql-client
WORKDIR /app
COPY package*.json ./
EXPOSE 3000

ENV NODE_ENV=production
RUN npm install


FROM base as builder
WORKDIR /app

COPY . .
RUN npx prisma generate
# RUN npx prisma migrate deploy
RUN npm run build

FROM base as production
WORKDIR /app

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
USER nextjs


COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./

# copy service account
COPY ./keys/gcloud-service-key.json /tmp/gcloud-service-key.json

WORKDIR /app
COPY ./scripts/entrypoint.prod.sh .
COPY ./scripts/backup/db_backup.ts .
COPY ./prisma ./prisma
# Set permissions for the Node.js user
# RUN chmod -R u+x /app/node_modules /app/.next
RUN chmod -R 755 /app/node_modules /app/.next
ENTRYPOINT ["/app/entrypoint.prod.sh"]
